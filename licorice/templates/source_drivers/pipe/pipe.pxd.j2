from runner_utils cimport times_t
from source_drivers cimport source_driver

cdef class PipeSourceDriver(source_driver.SourceDriver):
    cdef int named_pipe
    cdef int pipe_size
    cdef int read_size
    cdef uint8_t zero_buf[{{in_signal['schema']['data']['size']}} * sizeof({{in_dtype}})]
    cdef const char *FIFOFILE
    cdef char pipe_buf[50] # must be the same as pipe_size
    cdef void *pipe_zero_buf
    cdef timespec pipeTimer
    cdef timespec remTimer
    cdef time_t tSec = 0
    cdef long tNSec = 100000L
    cdef {{in_dtype}} *zeroPtr

    cdef size_t run(
        self, times_t *times, void *inBuf, size_t packetSize, object *out_sigs
    ) except *
    cdef void exit_handler(self, int exitStatus) except *
